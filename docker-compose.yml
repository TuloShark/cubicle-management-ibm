version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: space-optimization-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: space_optimization
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./api/seed.js:/docker-entrypoint-initdb.d/seed.js:ro
    networks:
      - space-optimization-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API Service
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile
    container_name: space-optimization-api
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password@mongodb:27017/space_optimization?authSource=admin
      - PORT=3000
    ports:
      - "3000:3000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./api:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - space-optimization-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: space-optimization-frontend
    environment:
      - VITE_API_BASE_URL=http://localhost:3000
    ports:
      - "8080:80"
    depends_on:
      api:
        condition: service_healthy
    networks:
      - space-optimization-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local

networks:
  space-optimization-network:
    driver: bridge
